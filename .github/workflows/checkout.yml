name: Checkout

on:
  workflow_dispatch:
  #push:
  #  branches:
  #    - "master"
  #    - "develop"
  #    - "feature/**"
  #    - "bugfix/**"
  #    - "hotfix/**"
  #    - "support/**"
  #  paths:
  #    - ".github/workflows/*.yml"
  #    - "lib/pubspec.yaml"
  #    - "lib/**.dart"
  #    - "test/**.dart"
  #    - "example/**.dart"
  pull_request:
    branches:
      - "master"
      - "develop"
      - "feature/**"
      - "bugfix/**"
      - "hotfix/**"
      - "support/**"
    paths:
      - "pubspec.yaml"
      - "example/pubspec.yaml"
      - ".github/workflows/*.yml"
      - "lib/pubspec.yaml"
      - "lib/**.dart"
      - "test/**.dart"
      - "example/**.dart"

jobs:
  checkout:
    name: "Checkout"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    container:
      image: plugfox/flutter:stable
    env:
      pub-cache-name: pub
      threshold: 50
    timeout-minutes: 15
    steps:
      - name: üöÇ Get latest code
        id: checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            pubspec.yaml
            lib
            test
            analysis_options.yaml
            CHANGELOG.md

      - name: üì§ Restore Pub modules
        id: cache-pub-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            $HOME/.pub-cache
          key: ${{ runner.os }}-${{ env.pub-cache-name }}-${{ hashFiles('**/pubspec.yaml') }}

      - name: üóÑÔ∏è Export Pub cache directory
        id: export-pub-cache
        timeout-minutes: 1
        run: |
          export PUB_CACHE=$PWD/.pub_cache/
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          echo "${HOME}/.pub-cache/bin" >> $GITHUB_PATH

      - name: üë∑ Install Dependencies
        id: install-dependencies
        timeout-minutes: 1
        run: |
          apt-get update && apt-get install -y lcov
          flutter pub get --no-example

      - name: üì• Save Pub modules
        id: cache-pub-save
        uses: actions/cache/save@v4
        with:
          path: |
            $HOME/.pub-cache
          key: ${{ runner.os }}-${{ env.pub-cache-name }}-${{ hashFiles('**/pubspec.yaml') }}

      - name: üîé Check format
        id: check-format
        timeout-minutes: 1
        run: dart format --set-exit-if-changed -l 80 -o none lib/

      - name: üìà Check analyzer
        id: check-analyzer
        timeout-minutes: 1
        run: dart analyze --fatal-infos --fatal-warnings lib/

      - name: üëÄ Verify versions
        id: verify-versions
        timeout-minutes: 1
        run: |
          test -f pubspec.yaml && test -f CHANGELOG.md
          version_pubspec=$(grep '^version:' pubspec.yaml | awk '{print $2}' | sed 's/[^[:print:]]//g')
          test -n "$version_pubspec"
          echo "Version from pubspec.yaml: '$version_pubspec'"
          grep -q "# $version_pubspec" CHANGELOG.md || (echo "Version not found in CHANGELOG.md" >&2; exit 1)

      - name: üß™ Run tests
        id: run-tests
        timeout-minutes: 2
        run: |
          flutter test test/octopus_test.dart
      #    dart pub global run coverage:test_with_coverage -fb -o coverage -- \
      #      --platform vm --compiler=kernel --coverage=coverage \
      #      --reporter=github --file-reporter=json:coverage/tests.json \
      #      --timeout=10m --concurrency=12 --color \
      #        test/test.dart

      #- name: üîç Check coverage
      #  id: check-coverage
      #  timeout-minutes: 2
      #  run: |
      #    mv coverage/lcov.info coverage/lcov.base.info
      #    lcov --remove coverage/lcov.base.info '*.g.dart' -o coverage/lcov.info
      #    lcov --list coverage/lcov.info
      #    THRESHOLD=${{ env.threshold }}
      #    COVERAGE=$(lcov --summary coverage/lcov.info | grep -i 'lines\|Total:' | tail -n 1 | awk '{print $2}' | sed 's/%//')
      #    echo "Coverage is $COVERAGE%"
      #    echo $COVERAGE | awk '{if ($1 < 50) exit 1}'

      - name: üßπ Cleanup artifacts
        id: cleanup-artifacts
        if: always()
        timeout-minutes: 2
        run: |
          rm -rf ~/build

      #- name: ‚ú® Upload coverage to Codecov
      #  id: upload-coverage
      #  timeout-minutes: 2
      #  uses: codecov/codecov-action@v4
      #  with:
      #    token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
